/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Whitelist, WhitelistInterface } from "../Whitelist";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_maxWhitelistedAddresses",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "addAddressToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getWhitelistedAddressesList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWhitelistedAddresses",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numAddressesWhitelisted",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161082038038061082083398181016040528101906100329190610090565b806000806101000a81548160ff021916908360ff160217905550506100bd565b600080fd5b600060ff82169050919050565b61006d81610057565b811461007857600080fd5b50565b60008151905061008a81610064565b92915050565b6000602082840312156100a6576100a5610052565b5b60006100b48482850161007b565b91505092915050565b610754806100cc6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806306c933d81461005c57806331a721881461008c5780634011d7cd146100aa578063785aba37146100c85780638e7314d9146100e6575b600080fd5b61007660048036038101906100719190610409565b6100f0565b6040516100839190610451565b60405180910390f35b610094610110565b6040516100a19190610488565b60405180910390f35b6100b2610121565b6040516100bf9190610488565b60405180910390f35b6100d0610134565b6040516100dd9190610561565b60405180910390f35b6100ee6101c2565b005b60016020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900460ff1681565b600360009054906101000a900460ff1681565b606060028054806020026020016040519081016040528092919081815260200182805480156101b857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161016e575b5050505050905090565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561024f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024690610606565b60405180910390fd5b60008054906101000a900460ff1660ff16600360009054906101000a900460ff1660ff16106102b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102aa90610698565b60405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600360008282829054906101000a900460ff1661032991906106e7565b92506101000a81548160ff021916908360ff1602179055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103d6826103ab565b9050919050565b6103e6816103cb565b81146103f157600080fd5b50565b600081359050610403816103dd565b92915050565b60006020828403121561041f5761041e6103a6565b5b600061042d848285016103f4565b91505092915050565b60008115159050919050565b61044b81610436565b82525050565b60006020820190506104666000830184610442565b92915050565b600060ff82169050919050565b6104828161046c565b82525050565b600060208201905061049d6000830184610479565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6104d8816103cb565b82525050565b60006104ea83836104cf565b60208301905092915050565b6000602082019050919050565b600061050e826104a3565b61051881856104ae565b9350610523836104bf565b8060005b8381101561055457815161053b88826104de565b9750610546836104f6565b925050600181019050610527565b5085935050505092915050565b6000602082019050818103600083015261057b8184610503565b905092915050565b600082825260208201905092915050565b7f53656e6465722068617320616c7265616479206265656e2077686974656c697360008201527f7465640000000000000000000000000000000000000000000000000000000000602082015250565b60006105f0602383610583565b91506105fb82610594565b604082019050919050565b6000602082019050818103600083015261061f816105e3565b9050919050565b7f4d6f7265206164647265737365732063616e742062652061646465642c206c6960008201527f6d69742072656163686564000000000000000000000000000000000000000000602082015250565b6000610682602b83610583565b915061068d82610626565b604082019050919050565b600060208201905081810360008301526106b181610675565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106f28261046c565b91506106fd8361046c565b92508260ff03821115610713576107126106b8565b5b82820190509291505056fea264697066735822122080f3c4ac53c54cd46a86a9646c1b0c895273251f1cb445cc4f97b676ecbca3fa64736f6c63430008090033";

type WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Whitelist__factory extends ContractFactory {
  constructor(...args: WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _maxWhitelistedAddresses: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Whitelist> {
    return super.deploy(
      _maxWhitelistedAddresses,
      overrides || {}
    ) as Promise<Whitelist>;
  }
  override getDeployTransaction(
    _maxWhitelistedAddresses: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _maxWhitelistedAddresses,
      overrides || {}
    );
  }
  override attach(address: string): Whitelist {
    return super.attach(address) as Whitelist;
  }
  override connect(signer: Signer): Whitelist__factory {
    return super.connect(signer) as Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistInterface {
    return new utils.Interface(_abi) as WhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Whitelist {
    return new Contract(address, _abi, signerOrProvider) as Whitelist;
  }
}
