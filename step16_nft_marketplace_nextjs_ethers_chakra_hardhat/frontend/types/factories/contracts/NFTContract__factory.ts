/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NFTContract,
  NFTContractInterface,
} from "../../contracts/NFTContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllURIs",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_tokenType",
        type: "uint8",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenCounters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriBase",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriExtention",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "urisTypes",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052605160808181529062001e8e60a03980516200002a91600b916020909101906200014f565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200005991600c916200014f565b506040805160a0810182526006606082018181526570696169633160d01b6080840152825282518084018452818152653834b0b4b19960d11b60208281019190915280840191909152835180850185529182526570696169633360d01b9082015291810191909152620000d190600e906003620001de565b50348015620000df57600080fd5b50604080518082018252600b81526a2824a0a4a1902a37b5b2b760a91b602080830191825283518085019094526005845264504941494360d81b90840152815191929162000130916000916200014f565b508051620001469060019060208401906200014f565b505050620002f5565b8280546200015d90620002b8565b90600052602060002090601f016020900481019282620001815760008555620001cc565b82601f106200019c57805160ff1916838001178555620001cc565b82800160010185558215620001cc579182015b82811115620001cc578251825591602001919060010190620001af565b50620001da9291506200023e565b5090565b82805482825590600052602060002090810192821562000230579160200282015b828111156200023057825180516200021f9184916020909101906200014f565b5091602001919060010190620001ff565b50620001da92915062000255565b5b80821115620001da57600081556001016200023f565b80821115620001da5760006200026c828262000276565b5060010162000255565b5080546200028490620002b8565b6000825580601f1062000295575050565b601f016020900490600052602060002090810190620002b591906200023e565b50565b600181811c90821680620002cd57607f821691505b60208210811415620002ef57634e487b7160e01b600052602260045260246000fd5b50919050565b611b8980620003056000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80636352211e116100c3578063c87b56dd1161007c578063c87b56dd146102af578063da815b8e146102c2578063e985e9c5146102d7578063f07fdf6914610313578063f17eaebe1461031c578063fbca0ce11461032f57600080fd5b80636352211e146102485780636ecd23061461025b57806370a082311461026e57806395d89b4114610281578063a22cb46514610289578063b88d4fde1461029c57600080fd5b80630e89341c116101155780630e89341c146101d757806318160ddd146101ea57806323b872dd146101fc5780632f745c591461020f57806342842e0e146102225780634f6ccce71461023557600080fd5b806301ffc9a71461015257806306fdde031461017a578063071119c81461018f578063081812fc14610197578063095ea7b3146101c2575b600080fd5b610165610160366004611572565b610337565b60405190151581526020015b60405180910390f35b610182610362565b60405161017191906115e3565b6101826103f4565b6101aa6101a53660046115f6565b610482565b6040516001600160a01b039091168152602001610171565b6101d56101d036600461162b565b6104a9565b005b6101826101e53660046115f6565b6105c4565b6008545b604051908152602001610171565b6101d561020a366004611655565b6105dd565b6101ee61021d36600461162b565b61060e565b6101d5610230366004611655565b6106a4565b6101ee6102433660046115f6565b6106bf565b6101aa6102563660046115f6565b610752565b6101d5610269366004611691565b6107b2565b6101ee61027c3660046116b4565b6108ab565b610182610931565b6101d56102973660046116cf565b610940565b6101d56102aa366004611721565b61094b565b6101826102bd3660046115f6565b610983565b6102ca610a2c565b60405161017191906117fd565b6101656102e536600461185f565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101ee600a5481565b61018261032a3660046115f6565b610aed565b610182610b18565b60006001600160e01b0319821663780e9d6360e01b148061035c575061035c82610b25565b92915050565b60606000805461037190611892565b80601f016020809104026020016040519081016040528092919081815260200182805461039d90611892565b80156103ea5780601f106103bf576101008083540402835291602001916103ea565b820191906000526020600020905b8154815290600101906020018083116103cd57829003601f168201915b5050505050905090565b600c805461040190611892565b80601f016020809104026020016040519081016040528092919081815260200182805461042d90611892565b801561047a5780601f1061044f5761010080835404028352916020019161047a565b820191906000526020600020905b81548152906001019060200180831161045d57829003601f168201915b505050505081565b600061048d82610b75565b506000908152600460205260409020546001600160a01b031690565b60006104b482610752565b9050806001600160a01b0316836001600160a01b031614156105275760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610543575061054381336102e5565b6105b55760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161051e565b6105bf8383610bd7565b505050565b600d602052600090815260409020805461040190611892565b6105e73382610c45565b6106035760405162461bcd60e51b815260040161051e906118c7565b6105bf838383610cc4565b6000610619836108ab565b821061067b5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161051e565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6105bf8383836040518060200160405280600081525061094b565b60006106ca60085490565b821061072d5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161051e565b6008828154811061074057610740611915565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b03168061035c5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161051e565b600e5460ff8216106107f55760405162461bcd60e51b815260206004820152600c60248201526b696e76616c6964207479706560a01b604482015260640161051e565b6000600b600e8360ff168154811061080f5761080f611915565b90600052602060002001600c60405160200161082d939291906119c5565b60408051601f19818403018152828201909152600a82526903a37b5b2b72ab9349d160b51b602083015291506108639082610e6b565b600a805490600061087383611a02565b9091555050600a546000908152600d60209081526040909120825161089a928401906114c3565b506108a733600a54610eb0565b5050565b60006001600160a01b0382166109155760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161051e565b506001600160a01b031660009081526003602052604090205490565b60606001805461037190611892565b6108a7338383610eca565b6109553383610c45565b6109715760405162461bcd60e51b815260040161051e906118c7565b61097d84848484610f99565b50505050565b606061098e82610b75565b6000828152600d6020526040902080546109a790611892565b80601f01602080910402602001604051908101604052809291908181526020018280546109d390611892565b8015610a205780601f106109f557610100808354040283529160200191610a20565b820191906000526020600020905b815481529060010190602001808311610a0357829003601f168201915b50505050509050919050565b6040805160038082526080820190925260609160009190816020015b6060815260200190600190039081610a4857905050905060005b600e5460ff82161015610ae757600b600e8260ff1681548110610a8757610a87611915565b90600052602060002001600c604051602001610aa5939291906119c5565b604051602081830303815290604052828260ff1681518110610ac957610ac9611915565b60200260200101819052508080610adf90611a1d565b915050610a62565b50919050565b600e8181548110610afd57600080fd5b90600052602060002001600091509050805461040190611892565b600b805461040190611892565b60006001600160e01b031982166380ac58cd60e01b1480610b5657506001600160e01b03198216635b5e139f60e01b145b8061035c57506301ffc9a760e01b6001600160e01b031983161461035c565b6000818152600260205260409020546001600160a01b0316610bd45760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161051e565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c0c82610752565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610c5183610752565b9050806001600160a01b0316846001600160a01b03161480610c9857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610cbc5750836001600160a01b0316610cb184610482565b6001600160a01b0316145b949350505050565b826001600160a01b0316610cd782610752565b6001600160a01b031614610d3b5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161051e565b6001600160a01b038216610d9d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161051e565b610da8838383610fcc565b610db3600082610bd7565b6001600160a01b0383166000908152600360205260408120805460019290610ddc908490611a3d565b90915550506001600160a01b0382166000908152600360205260408120805460019290610e0a908490611a54565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6108a78282604051602401610e81929190611a6c565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b179052611084565b6108a78282604051806020016040528060008152506110a5565b816001600160a01b0316836001600160a01b03161415610f2c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161051e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610fa4848484610cc4565b610fb0848484846110d8565b61097d5760405162461bcd60e51b815260040161051e90611a91565b6001600160a01b0383166110275761102281600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61104a565b816001600160a01b0316836001600160a01b03161461104a5761104a83826111e5565b6001600160a01b038216611061576105bf81611282565b826001600160a01b0316826001600160a01b0316146105bf576105bf8282611331565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6110af8383611375565b6110bc60008484846110d8565b6105bf5760405162461bcd60e51b815260040161051e90611a91565b60006001600160a01b0384163b156111da57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061111c903390899088908890600401611ae3565b602060405180830381600087803b15801561113657600080fd5b505af1925050508015611166575060408051601f3d908101601f1916820190925261116391810190611b20565b60015b6111c0573d808015611194576040519150601f19603f3d011682016040523d82523d6000602084013e611199565b606091505b5080516111b85760405162461bcd60e51b815260040161051e90611a91565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610cbc565b506001949350505050565b600060016111f2846108ab565b6111fc9190611a3d565b60008381526007602052604090205490915080821461124f576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061129490600190611a3d565b600083815260096020526040812054600880549394509092849081106112bc576112bc611915565b9060005260206000200154905080600883815481106112dd576112dd611915565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061131557611315611b3d565b6001900381819060005260206000200160009055905550505050565b600061133c836108ab565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b0382166113cb5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161051e565b6000818152600260205260409020546001600160a01b0316156114305760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161051e565b61143c60008383610fcc565b6001600160a01b0382166000908152600360205260408120805460019290611465908490611a54565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546114cf90611892565b90600052602060002090601f0160209004810192826114f15760008555611537565b82601f1061150a57805160ff1916838001178555611537565b82800160010185558215611537579182015b8281111561153757825182559160200191906001019061151c565b50611543929150611547565b5090565b5b808211156115435760008155600101611548565b6001600160e01b031981168114610bd457600080fd5b60006020828403121561158457600080fd5b813561158f8161155c565b9392505050565b6000815180845260005b818110156115bc576020818501810151868301820152016115a0565b818111156115ce576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061158f6020830184611596565b60006020828403121561160857600080fd5b5035919050565b80356001600160a01b038116811461162657600080fd5b919050565b6000806040838503121561163e57600080fd5b6116478361160f565b946020939093013593505050565b60008060006060848603121561166a57600080fd5b6116738461160f565b92506116816020850161160f565b9150604084013590509250925092565b6000602082840312156116a357600080fd5b813560ff8116811461158f57600080fd5b6000602082840312156116c657600080fd5b61158f8261160f565b600080604083850312156116e257600080fd5b6116eb8361160f565b91506020830135801515811461170057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561173757600080fd5b6117408561160f565b935061174e6020860161160f565b925060408501359150606085013567ffffffffffffffff8082111561177257600080fd5b818701915087601f83011261178657600080fd5b8135818111156117985761179861170b565b604051601f8201601f19908116603f011681019083821181831017156117c0576117c061170b565b816040528281528a60208487010111156117d957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561185257603f19888603018452611840858351611596565b94509285019290850190600101611824565b5092979650505050505050565b6000806040838503121561187257600080fd5b61187b8361160f565b91506118896020840161160f565b90509250929050565b600181811c908216806118a657607f821691505b60208210811415610ae757634e487b7160e01b600052602260045260246000fd5b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c908083168061194557607f831692505b602080841082141561196757634e487b7160e01b600052602260045260246000fd5b81801561197b576001811461198c576119b9565b60ff198616895284890196506119b9565b60008881526020902060005b868110156119b15781548b820152908501908301611998565b505084890196505b50505050505092915050565b60006119e36119dd6119d7848861192b565b8661192b565b8461192b565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611a1657611a166119ec565b5060010190565b600060ff821660ff811415611a3457611a346119ec565b60010192915050565b600082821015611a4f57611a4f6119ec565b500390565b60008219821115611a6757611a676119ec565b500190565b604081526000611a7f6040830185611596565b82810360208401526119e38185611596565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611b1690830184611596565b9695505050505050565b600060208284031215611b3257600080fd5b815161158f8161155c565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220235660e75f530ba8a4fc2a9d1a063f55a8b55e4e5ca5648e4b0cb1ab342dd42b64736f6c6343000809003368747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f516d6248634846585533723248706b47524d435a566e444d674c5171776963537655455a7950687442383939666b2f";

type NFTContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTContract__factory extends ContractFactory {
  constructor(...args: NFTContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTContract> {
    return super.deploy(overrides || {}) as Promise<NFTContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NFTContract {
    return super.attach(address) as NFTContract;
  }
  override connect(signer: Signer): NFTContract__factory {
    return super.connect(signer) as NFTContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTContractInterface {
    return new utils.Interface(_abi) as NFTContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTContract {
    return new Contract(address, _abi, signerOrProvider) as NFTContract;
  }
}
